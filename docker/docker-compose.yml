# echo "127.0.0.1 web.omnipackage.local" >> /etc/hosts

# RAILS_MASTER_KEY=$(cat ../config/credentials/production.key) MINIO_ACCESS_KEY_ID=root MINIO_SECRET_ACCESS_KEY=password docker compose up

services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: omnipackage_web_production
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 5
    networks:
      - internal

  redis:
    image: redis:7
    command: redis-server --save "" --appendonly no
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      retries: 5
    networks:
      - internal

  web: &app
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
    command: bash -c "bin/rails db:prepare && bin/rails server -b 0.0.0.0 -p 3000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
      DATABASE_URL: "postgresql://postgres:postgres@db:5432/omnipackage_web_production"
      REDIS_URL: "redis://redis:6379/0"
      RAILS_ENV: production
      ACTIVESTORAGE_SERVICE: minio
      MINIO_ENDPOINT: http://storage.omnipackage.local
      MINIO_ACCESS_KEY_ID: ${MINIO_ACCESS_KEY_ID}
      MINIO_SECRET_ACCESS_KEY: ${MINIO_SECRET_ACCESS_KEY}
      REPOSITORIES_BUCKET: repositories
      REPOSITORIES_PUBLIC_URL: http://storage.omnipackage.local/repositories
      PUBLISH_CONTAINER_LIMITS_DISABLE: true
    volumes:
      - public_assets:/app/public:ro
    networks:
      - internal

  sidekiq_default:
    <<: *app
    command: bundle exec sidekiq -C config/sidekiq/default.yml

  sidekiq_long:
    <<: *app
    command: bundle exec sidekiq -C config/sidekiq/long.yml

  sidekiq_publish:
    <<: *app
    command: bundle exec sidekiq -C config/sidekiq/publish.yml
    privileged: true
    #user: root
    #environment:
    #  PODMAN_SYSTEMD_UNIT: ''
    #tmpfs:
    #  - /run
    #  - /tmp
    #security_opt:
    #  - seccomp=unconfined
    #  - apparmor=unconfined
    #cgroup: host

  caddy:
    image: caddy:2
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - public_assets:/app/public:ro
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - web
    networks:
      internal:
         aliases:
          - storage.omnipackage.local

  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY_ID}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_ACCESS_KEY}
    command: server /data --console-address ":9001"
    ports:
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - internal

volumes:
  db_data:
  redis_data:
  caddy_data:
  caddy_config:
  public_assets:
  minio_data:

networks:
  internal:
    driver: bridge
